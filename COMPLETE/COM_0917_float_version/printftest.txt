	/* PRINTF("%d", 11111111111) */
	/* PRINTF("%hd", (short)1111111) */
	/* PRINTF("%hhd", (char)1111) */
 ("%c", 'a')
 ("%c small string", 'a')
 ("the char is: %c", 'a')
 ("n%cs", 'a')
 ("%c%c%c%c%c", 'a', 'i', 'u', 'e', 'o')
 ("l%cl%cl%cl%cl%c", 'a', 'i', 'u', 'e', 'o')
 ("%s", "")
 ("this is a %s", "test")
 ("this is 1 %s with %s %s", "test", "multiple", "strings")
 ("%s%s%s%s", "This ", "is", " an ugly ", "test")
 ("%s", "This is a rather simple test.")
 ("%s", "-2")
 ("%s", "-24")
 ("%s", "-stop")
 ("%s", "-0003")
 ("%s", "000-0003")
 ("%s", "0x42")
 ("%s", "0x0000042")
 ("some naugty tests: %s", "0000%")
 ("some naugty tests: %s", "    %")
 ("some naugty tests: %s", "%000")
 ("%s", null_str)
 ("%s everywhere", null_str)
 ("everywhere %s", null_str)
 ("%s", "h")
 ("t%st%s", "a", "u")
 ("%s%s%s%s%s%s", "a", "i", "u", "e", "o", "l")
 ("%p", &test)
 ("%p is a virtual memory address", &test)
 ("The address of the answer is %p", &test)
 ("The address is %p, so what?", &test)
 ("A pointer at %p points to %p", &test, &ptr)
 ("This %p is a very strange address", (void *)(long int)test)
 ("This %p is an address from the heap", mallocked) free(mallocked);
 ("%p", NULL)
 ("The NULL macro represents the %p address", NULL)
 ("This %p is even stranger", (void *)-1)
 ("%d", 0)
 ("%d", 10)
 ("%d, %d", 10, 20)
 ("%d%d%d%d", 10, 20, 30, 5)
 ("%d %d", 2147483647, (int)-2147483648)
 ("42 - 84 is %d", -42)
 ("%d C is the lowest temperature in the universe", -273)
 ("%dxC is the lowest temperature in the universe", -273)
 ("%dsC is the lowest temperature in the universe", -273)
 ("%dpC is the lowest temperature in the universe", -273)
 ("%i", 0)
 ("%i", 10)
 ("%i, %i", 10, 23)
 ("%i%i%i%i%i%i%i", 10, 23, -2, 37, 200, -9999, 977779)
 ("%i %i", 2147483647, (int)-2147483648)
 ("%iq%i", 21447, -21648)
 ("%u", 42)
 ("%u", 0)
 ("%u", 2147483647)
 ("%u", (unsigned int)2147483648)
 ("%u", (unsigned int)3147983649)
 ("%u", (unsigned int)4294967295)
 ("%u to the power of %u is %u", 2, 32, (unsigned int)4294967295)
 ("%u%u%u%u", (unsigned int)429896724, 0, 32, (unsigned int)4294967295)
 ("%x", 0)
 ("%x", 1)
 ("%x", 10)
 ("%x", 16)
 ("%x", 160)
 ("%x", 255)
 ("%x", 256)
 ("%x", 3735929054u)
 ("the password is %x", 3735929054u)
 ("%x is the definitive answer", 66u)
 ("this is the real number: %x", -1u)
 ("%X", 0)
 ("%X", 1)
 ("%X", 10)
 ("%X", 16)
 ("%X", 160)
 ("%X", 255)
 ("%X", 256)
 ("%X", (unsigned int)3735929054)
 ("the password is %X", (unsigned int)3735929054)
 ("%X is the definitive answer", (unsigned int)66)
 ("this is the real number: %X", (unsigned int)-1)
 ("%%")
 ("100%%")
 ("%%p is how you print a pointer in printf")
 ("the '%%%%' is used to print a %% in printf")
 ("%%%%%%%%%%%%%%%%")
 ("%%c%%s%%p%%d%%i%%u%%x%%X%%")
 ("%c - %s - %p %d - %i - %u - %x %X %%", 'a', "test", (void *)0xdeadc0de, 20, -20, -1, -1, 200000000)
 ("%c - %s - %p %d - %i - %u - %x %X %%", 'c', "", (void *)-1, 20, -20, -1, -1, 200000000)
 ("%i - %s - %p %d - %c - %u - %x %X %%", 20, "", (void *)-1, '\0', -20, -1, -1, 200000000)
 ("%c - %s - %p %d - %i - %u - %x %X %%", 'b', null_str, NULL, 20, -20, -1, -1, 200000000)
 ("%1c", 'a'))
 ("%10c", 'b'))
 ("%2c", 'c'))
 ("there are 15 spaces between this text and the next char%15c", 'd'))
 ("%5chis paragraph is indented", 't'))
 ("The number %7c represents luck", '7'))
 ("%1s", "a")
 ("%1s", "abc")
 ("%7s", "a")
 ("%7s", "abc")
 ("%1s", "-42")
 ("%2s", "-42")
 ("%3s", "-42")
 ("%4s", "-42")
 ("%5s", "-42")
 ("%6s", "-42")
 ("%1s", null_str)
 ("%2s", null_str)
 ("%5s", null_str)
 ("%6s", null_str)
 ("%7s", null_str)
 ("%7s is as easy as %13s", "abc", "123")
 ("%13s are the three first letter of the %3s", "a, b and c", "alphabet")
 ("%s%13s%42s%3s", "a, b and c", " are letters", " of the", " alphabet")
 ("%sc%13sd%42sp%3sx", "a, b and c", " are letters", " of the", " alphabet")
 ("%sc%13sd%42sp%3sx", "a, b and c", " are letters", " of the", " alphabet")
 ("%1p", &c)
 ("%30p", &c)
 ("%12p", (void *)0x7ffe6b8e60c6)
 ("%13p", (void *)0x7ffe6b8e60c5)
 ("%14p", (void *)0x7ffe6b8e60c4)
 ("the address is %12p", (void *)0x7ffe6b8e60c7)
 ("the address is %13p", (void *)0x7ffe6b8e60c8)
 ("the address is %14p", (void *)0x7ffe6b8e60c9)
 ("the address is %1p", (void *)0)
 ("the address is %2p", (void *)0)
 ("the address is %3p", (void *)0)
 ("the address is %4p", (void *)0)
 ("the address is %8p", (void *)0)
 ("%12p is the address", (void *)0x7ffe6b8e60c7)
 ("%13p is the address", (void *)0x7ffe6b8e60c8)
 ("%14p is the address", (void *)0x7ffe6b8e60c9)
 ("%1p is the address", (void *)0)
 ("%2p is the address", (void *)0)
 ("%3p is the address", (void *)0)
 ("%4p is the address", (void *)0)
 ("%8p is the address", (void *)0)
 ("%1d", 0)
 ("%1d", -4)
 ("%10d", 42)
 ("%42d", 42000)
 ("%20d", -42000)
 ("wait for it... %50d", 42)
 ("%20d is how many tests are going to be made", 8000)
 ("%5d", 2147483647)
 ("%30d", 2147483647)
 ("%10d", 2147483647)
 ("%5d", (int)-2147483648)
 ("%30d", (int)-2147483648)
 ("%10d", (int)-2147483648)
 ("%11d", (int)-2147483648)
 ("%12d", (int)-2147483648)
 ("%12d, %20d, %2d, %42d", (int)-2147483648, 3, 30, -1)
 ("%12d, %d, %2d, %42d", (int)-2147483648, 3, 30, -1)
 ("%14d%20d%2d%d", (int)-2147483648, 3, 30, -1)
 ("%14dc%20ds%2dx%du", (int)-2147483648, 3, 30, -1)
 ("%1i", 0)
 ("%1i", -4)
 ("%10i", 42)
 ("%42i", 42000)
 ("%20i", -42000)
 ("wait for it... %50i", 42)
 ("%20i is how many tests are going to be made", 8000)
 ("%5i", 2147483647)
 ("%30i", 2147483647)
 ("%10i", 2147483647)
 ("%5i", (int)-2147483648)
 ("%30i", (int)-2147483648)
 ("%10i", (int)-2147483648)
 ("%11i", (int)-2147483648)
 ("%12i", (int)-2147483648)
 ("%12i, %20i, %2i, %42i", (int)-2147483648, 3, 30, -1)
 ("%12i, %i, %2i, %42i", (int)-2147483648, 3, 30, -1)
 ("%14i%20i%2i%i", (int)-2147483648, 3, 30, -1)
 ("%14ic%20is%2ix%du", (int)-2147483648, 3, 30, -1)
 ("%1u", 0)
 ("%2u", 1)
 ("%1u", 1000)
 ("%4u", 1000)
 ("%30u", 1000)
 ("%9u is the biggest unsigned int", (unsigned int)-1)
 ("%10uis the biggest unsigned int", (unsigned int)-1)
 ("%11uis the biggest unsigned int", (unsigned int)-1)
 ("the biggest unsigned int is %9u", (unsigned int)-1)
 ("the biggest unsigned int is %10u", (unsigned int)-1)
 ("the biggest unsigned int is %11u", (unsigned int)-1)
 ("Here are some numbers: %1u%2u%5u%3u%9u and %ui", 11, (unsigned int)-1, 2, 200, 3, 10)
 ("%1x", 0)
 ("%2x", 1)
 ("%3x", 10)
 ("%1x", 16)
 ("%2x", 160)
 ("%3x", 255)
 ("%42x", 256)
 ("%7x", (unsigned int)3735929054)
 ("%8x", (unsigned int)3735929054)
 ("%9x", (unsigned int)3735929054)
 ("the password is %7x", (unsigned int)3735929054)
 ("the password is %8x", (unsigned int)3735929054)
 ("the password is %9x", (unsigned int)3735929054)
 ("%1x is the definitive answer", (unsigned int)66)
 ("%2x is the definitive answer", (unsigned int)66)
 ("%3x is the definitive answer", (unsigned int)66)
 ("this is the real number: %7x", (unsigned int)-1)
 ("this is the real number: %8x", (unsigned int)-1)
 ("this is the real number: %9x", (unsigned int)-1)
 ("%1x%2x%9x", (unsigned int)-1, 0xf0ca, 123456)
 ("%1xis doomed%2xpost%9xX args", (unsigned int)-1, 0xf0b1a, 7654321)
 ("%1X", 0)
 ("%2X", 1)
 ("%3X", 10)
 ("%1X", 16)
 ("%2X", 160)
 ("%3X", 255)
 ("%42X", 256)
 ("%7X", (unsigned int)3735929054)
 ("%8X", (unsigned int)3735929054)
 ("%9X", (unsigned int)3735929054)
 ("the password is %7X", (unsigned int)3735929054)
 ("the password is %8X", (unsigned int)3735929054)
 ("the password is %9X", (unsigned int)3735929054)
 ("%1X is the definitive answer", (unsigned int)66)
 ("%2X is the definitive answer", (unsigned int)66)
 ("%3X is the definitive answer", (unsigned int)66)
 ("this is the real number: %7X", (unsigned int)-1)
 ("this is the real number: %8X", (unsigned int)-1)
 ("this is the real number: %9X", (unsigned int)-1)
 ("%1X%2X%9X", (unsigned int)-1, 0xf0ca, 123456)
 ("%1Xis doomed%2Xpost%9Xx args", (unsigned int)-1, 0xf0b1a, 7654321)
 ("%.s", "hi there")
 ("%.0s", "hi there")
 ("%.1s", "hi there")
 ("%.2s", "hi there")
 ("%.3s", "hi there")
 ("%.4s", "hi there")
 ("%.7s", "hi there")
 ("%.8s", "hi there")
 ("%.9s", "hi there")
 ("%.12s", "hi there")
 ("%.s", "-42")
 ("%.0s", "-42")
 ("%.1s", "-42")
 ("%.2s", "-42")
 ("%.3s", "-42")
 ("%.4s", "-42")
 ("%.7s", "-42")
 ("%.1s", null_str)
 ("%.2s", null_str)
 ("%.5s", null_str)
 ("%.6s", null_str)
 ("%.7s", null_str)
 ("%.2s, motherfucker", "hi there")
 ("This %.3s a triumph ", "wasabi")
 ("%.4s making a %.4s here: %.13s", "I'm delighted", "notation", "HUGE SUCCESS!")
 ("It's %.4s to over%.50s my%s", "hardware", "state", " satisfaction")
 ("%.11s%.6s%.4s", "Aperture", " Scientists", "ce")
 ("%.1d", 2))
 ("%.2d", 3))
 ("%.4d", 32))
 ("%.3d", 420000))
 ("%.0d", 420000))
 ("%.3d", -1))
 ("%.3d", -1234))
 ("%.4d", -1234))
 ("%.5d", -1234))
 ("%.5d", (int)-2147483648))
 ("%.9d", (int)-2147483648))
 ("%.10d", (int)-2147483648))
 ("%.11d", (int)-2147483648))
 ("%.12d", (int)-2147483648))
 ("%.13d", (int)-2147483648))
 ("%.5d", 2147483647))
 ("%.9d", 2147483647))
 ("%.10d", 2147483647))
 ("%.11d", 2147483647))
 ("%.12d", 2147483647))
 ("%.0d", 2))
 ("%.0d", 2147483647))
 ("%.0d", 0))
 ("%.0d", 10))
 ("%.d", 10))
 ("%.d", 0))
 ("I'm gonna watch %.3d", 7))
 ("%.3d is the movie I'm gonna watch", 7))
 ("Then take these %.7d things and get the hell out of here", 2))
 ("Bla %.2di bla %.5dsbla bla %.dx bla %.d", 127, 42, 1023, 0))
 ("%.4d%.2d%.20d%.0d%.0d%.d%.d%.d", 127, 0, 1023, 0, (int)-2147483648, 0, 1, (int)-2147483648))
 ("%.1i", 7))
 ("%.3i", 7))
 ("%.2i", 3))
 ("%.4i", 32))
 ("%.3i", 420000))
 ("%.0i", 420000))
 ("%.3i", -1))
 ("%.3i", -1234))
 ("%.4i", -1234))
 ("%.5i", -1234))
 ("%.5i", (int)-2147483648))
 ("%.9i", (int)-2147483648))
 ("%.10i", (int)-2147483648))
 ("%.11i", (int)-2147483648))
 ("%.12i", (int)-2147483648))
 ("%.13i", (int)-2147483648))
 ("%.5i", 2147483647))
 ("%.9i", 2147483647))
 ("%.10i", 2147483647))
 ("%.11i", 2147483647))
 ("%.12i", 2147483647))
 ("%.0i", 2))
 ("%.0i", 2147483647))
 ("%.0i", 0))
 ("%.0i", 10))
 ("%.i", 10))
 ("%.i", 0))
 ("I'm gonna watch %.3i", 7))
 ("%.3i is the movie I'm gonna watch", 7))
 ("Then take these %.7i things and get the hell out of here", 2))
 ("Bla %.2ii bla %.5isbla bla %.ix bla %.i", 127, 42, 1023, 0))
 ("%.4i%.2i%.20i%.0i%.0i%.i%.i%.i", 127, 0, 1023, 0, (int)-2147483648, 0, 1, (int)-2147483648))
 ("%.1u", 1))
 ("%.2u", 1))
 ("%.2u", 0))
 ("%.0u", 0))
 ("%.u", 0))
 ("%.2u", 30000))
 ("%.20u", 30000))
 ("%.0u", (unsigned int)-1))
 ("%.5u", (unsigned int)-1))
 ("%.9u", (unsigned int)-1))
 ("%.10u", (unsigned int)-1))
 ("%.11u", (unsigned int)-1))
 ("%.10uis a big number", (unsigned int)-1))
 ("%.0uis a big number", (unsigned int)-1))
 ("%.4us a big number", (unsigned int)-1))
 ("%.9uxs a big number", (unsigned int)-1))
 ("%.11ups a big number", (unsigned int)-1))
 ("the number is %.0u", (unsigned int)-1))
 ("the number is %.u", (unsigned int)-1))
 ("the number is %.5u", (unsigned int)-1))
 ("the number is %.9u", (unsigned int)-1))
 ("the number is %.10u", (unsigned int)-1))
 ("the number is %.11u", (unsigned int)-1))
 ("the number is %.11u", (unsigned int)-1))
 ("%.0uis a big number", 0))
 ("%.4us a big number", 0))
 ("the number is %.0u", 0))
 ("the number is %.u", 0))
 ("the number is %.5u", 0))
 ("%u%.5u%.0u%.u%.9u", 5, 55, 2, 0, 42))
 ("%us%.5ui%.0uc%.up%.9ux", 5, 55, 2, 0, 42))
 ("%.1x", 0xa))
 ("%.4x", 11))
 ("%.0x", 0))
 ("%.1x", -1))
 ("%.10x", -1))
 ("%.14x", -1))
 ("%.8x", 0))
 ("%.2x", 30000))
 ("%.20x", 30000))
 ("%.0x", (unsigned int)-1))
 ("%.5x", (unsigned int)-1))
 ("%.9x", (unsigned int)-1))
 ("%.10x", (unsigned int)-1))
 ("%.11x", (unsigned int)-1))
 ("%.10xis a big number", (unsigned int)-1))
 ("%.0xis a big number", (unsigned int)-1))
 ("%.4xs a big number", (unsigned int)-1))
 ("%.9xxs a big number", (unsigned int)-1))
 ("%.11xps a big number", (unsigned int)-1))
 ("the number is %.0x", (unsigned int)-1))
 ("the number is %.x", (unsigned int)-1))
 ("the number is %.5x", (unsigned int)-1))
 ("the number is %.9x", (unsigned int)-1))
 ("the number is %.10x", (unsigned int)-1))
 ("the number is %.11x", (unsigned int)-1))
 ("the number is %.11x", (unsigned int)-1))
 ("%.0xis a big number", 0))
 ("%.4xs a big number", 0))
 ("the number is %.0x", 0))
 ("the number is %.x", 0))
 ("the number is %.5x", 0))
 ("%x%.5x%.0x%.x%.9x", 5, 55, 2, 0, 42))
 ("%xs%.5xi%.0xc%.xp%.9xu", 5, 55, 2, 0, 42))
 ("%.1X", 0xa))
 ("%.4X", 11))
 ("%.0X", 0))
 ("%.1X", -1))
 ("%.10X", -1))
 ("%.14X", -1))
 ("%.8X", 0))
 ("%.2X", 30000))
 ("%.20X", 30000))
 ("%.0X", (unsigned int)-1))
 ("%.5X", (unsigned int)-1))
 ("%.9X", (unsigned int)-1))
 ("%.10X", (unsigned int)-1))
 ("%.11X", (unsigned int)-1))
 ("%.10Xis a big number", (unsigned int)-1))
 ("%.0Xis a big number", (unsigned int)-1))
 ("%.4Xs a big number", (unsigned int)-1))
 ("%.9XXs a big number", (unsigned int)-1))
 ("%.11Xps a big number", (unsigned int)-1))
 ("the number is %.0X", (unsigned int)-1))
 ("the number is %.X", (unsigned int)-1))
 ("the number is %.5X", (unsigned int)-1))
 ("the number is %.9X", (unsigned int)-1))
 ("the number is %.10X", (unsigned int)-1))
 ("the number is %.11X", (unsigned int)-1))
 ("the number is %.11X", (unsigned int)-1))
 ("%.0Xis a big number", 0))
 ("%.4Xs a big number", 0))
 ("the number is %.0X", 0))
 ("the number is %.X", 0))
 ("the number is %.5X", 0))
 ("%X%.5X%.0X%.X%.9X", 5, 55, 2, 0, 42))
 ("%Xs%.5Xi%.0Xc%.Xp%.9Xu", 5, 55, 2, 0, 42))
 ("%-c", 'p')
 ("%-1c", 'b')
 ("%-5c", 'w')
 (" kk daora%-5cblz", 'w')
 ("%-20carigatou", 'w')
 ("%-c%-c%-4c%-11c", 'a', 'b', 'c', 'd')
 ("%-ci%-cp%4cs%-11cx", 'a', 'b', 'c', 'd')
 ("%----ci%---cp%4cs%--11cx", 'a', 'b', 'c', 'd')
 ("%-9sScience!", "Aperture")
 ("We %-s what we %8s, %-2s we %-20s", "do", "must", "because", "can")
 ("%--4s %s %------------------9s of %s of %-5s", "for", "the", "goooood", "aaall", "us")
 ("%--4.1s %s %------------------9.3s of %s of %-5.7s", "for", "the", "goooood", "aaall", "us")
 ("%--.sp--.su kkkk", "pegadinha po")
 ("%-9sScience!", "-42")
 ("that's the way it %-20pis", "")
 ("as soon as %-10possible", (void *) -1)
 ("as soon as %-16peasible", (void *) (((long int)3 << 42) + 15))
 ("as soon as %-16peasible", (void *) (((long int)3 << 42) + 15))
 ("thats %-psrobably not a good idea", (void *) 13)
 ("%------21pwhoa wtf is that", (void *) 13)
 ("%------21p yeah i'm %p running out %--p of ideas", (void *) 13, (void *) 65, (void *) -1)
 ("%-d", 0)
 ("%-d", 1)
 ("%-d", 10)
 ("%-d", -10)
 ("%-d", 5000)
 ("%-d", -5000)
 ("%-d", (int)-2147483648)
 ("%-d", 2147483647)
 ("%-1d", 0)
 ("%-1d", 1)
 ("%-1d", 10)
 ("%-1d", -10)
 ("%-1d", 5000)
 ("%-1d", -5000)
 ("%-1d", (int)-2147483648)
 ("%-1d", 2147483647)
 ("%-10d", 0)
 ("%-10d", 1)
 ("%-10d", 10)
 ("%-10d", -10)
 ("%-10d", 5000)
 ("%-10d", -5000)
 ("%-10d", (int)-2147483648)
 ("%-10d", 2147483647)
 ("%-.d", 0)
 ("%-.1d", 1)
 ("%-.2d", 10)
 ("%-.3d", -10)
 ("%-.4d", 5000)
 ("%-.5d", -5000)
 ("%-.6d", (int)-2147483648)
 ("%-.7d", 2147483647)
 ("%-1.8d", 0)
 ("%-1.9d", 1)
 ("%-1.10d", 10)
 ("%-1.0d", -10)
 ("%-1.6d", 5000)
 ("%-1.4d", -5000)
 ("%-1.10d", (int)-2147483648)
 ("%-1.12d", 2147483647)
 ("%-10.d", 0)
 ("%-10.10d", 1)
 ("%-10.5d", 10)
 ("%-10.2d", -10)
 ("%-10.5d", 5000)
 ("%-10.5d", -5000)
 ("%-10.15d", (int)-2147483648)
 ("%-10.5d", 2147483647)
 ("%-15.d", 0)
 ("%-15.10d", 1)
 ("%-15.5d", 10)
 ("%-15.2d", -10)
 ("%-15.5d", 5000)
 ("%-15.5d", -5000)
 ("%-15.15d", (int)-2147483648)
 ("%-15.5d", 2147483647)
 ("%-4.5d%d%4d%-10d-d5%-.3d", 3, 4, 5, 6, 7)
 ("%-4.5d%d%4d%-10d-d5%-.3d", 300000, 400000, 500000, 600000, 700000)
 ("%-4.5d%d%4d%-10d-d5%-.3d", -300000, -400000, -500000, -600000, -700000)
 ("%-4.5d%d%4d%-10d-d5%-.3d", 2147483647, 2141483647, 2141483647, 2141483647, 2141483647)
 ("%-4.5d%d%4d%-10d-d5%-.3d", (int)-2147483648, (int)-2141483648, (int)-2141483648, (int)-2141483648, (int)-2141483648)
 ("%-i", 0)
 ("%-i", 1)
 ("%-i", 10)
 ("%-i", -10)
 ("%-i", 5000)
 ("%-i", -5000)
 ("%-i", (int)-2147483648)
 ("%-i", 2147483647)
 ("%-1i", 0)
 ("%-1i", 1)
 ("%-1i", 10)
 ("%-1i", -10)
 ("%-1i", 5000)
 ("%-1i", -5000)
 ("%-1i", (int)-2147483648)
 ("%-1i", 2147483647)
 ("%-10i", 0)
 ("%-10i", 1)
 ("%-10i", 10)
 ("%-10i", -10)
 ("%-10i", 5000)
 ("%-10i", -5000)
 ("%-10i", (int)-2147483648)
 ("%-10i", 2147483647)
 ("%-.i", 0)
 ("%-.1i", 1)
 ("%-.2i", 10)
 ("%-.3i", -10)
 ("%-.4i", 5000)
 ("%-.5i", -5000)
 ("%-.6i", (int)-2147483648)
 ("%-.7i", 2147483647)
 ("%-1.8i", 0)
 ("%-1.9i", 1)
 ("%-1.10i", 10)
 ("%-1.0i", -10)
 ("%-1.6i", 5000)
 ("%-1.4i", -5000)
 ("%-1.10i", (int)-2147483648)
 ("%-1.12i", 2147483647)
 ("%-10.i", 0)
 ("%-10.10i", 1)
 ("%-10.5i", 10)
 ("%-10.2i", -10)
 ("%-10.5i", 5000)
 ("%-10.5i", -5000)
 ("%-10.15i", (int)-2147483648)
 ("%-10.5i", 2147483647)
 ("%-15.i", 0)
 ("%-15.10i", 1)
 ("%-15.5i", 10)
 ("%-15.2i", -10)
 ("%-15.5i", 5000)
 ("%-15.5i", -5000)
 ("%-15.15i", (int)-2147483648)
 ("%-15.5i", 2147483647)
 ("%-4.5i%i%4i%-10i-i5%-.3i", 3, 4, 5, 6, 7)
 ("%-4.5i%i%4i%-10i-i5%-.3i", 300000, 400000, 500000, 600000, 700000)
 ("%-4.5i%i%4i%-10i-i5%-.3i", -300000, -400000, -500000, -600000, -700000)
 ("%-4.5i%i%4i%-10i-i5%-.3i", 2147483647, 2141483647, 2141483647, 2141483647, 2141483647)
 ("%-4.5i%i%4i%-10i-i5%-.3i", (int)-2147483648, (int)-2141483648, (int)-2141483648, (int)-2141483648, (int)-2141483648)
 ("%-u", 0)
 ("%-u", 1)
 ("%-u", 10)
 ("%-u", -10)
 ("%-u", 5000)
 ("%-u", -5000)
 ("%-u", (unsigned int)-1)
 ("%-u", 2147483647)
 ("%-1u", 0)
 ("%-1u", 1)
 ("%-1u", 10)
 ("%-1u", -10)
 ("%-1u", 5000)
 ("%-1u", -5000)
 ("%-1u", (unsigned int)-1)
 ("%-1u", 2147483647)
 ("%-10u", 0)
 ("%-10u", 1)
 ("%-10u", 10)
 ("%-10u", -10)
 ("%-10u", 5000)
 ("%-10u", -5000)
 ("%-10u", -1)
 ("%-10u", 2147483647)
 ("%-.u", 0)
 ("%-.1u", 1)
 ("%-.2u", 10)
 ("%-.3u", -10)
 ("%-.4u", 5000)
 ("%-.5u", -5000)
 ("%-.6u", -1)
 ("%-.7u", 2147483647)
 ("%-1.8u", 0)
 ("%-1.9u", 1)
 ("%-1.10u", 10)
 ("%-1.0u", -10)
 ("%-1.6u", 5000)
 ("%-1.4u", -5000)
 ("%-1.10u", -1)
 ("%-1.12u", 2147483647)
 ("%-10.u", 0)
 ("%-10.10u", 1)
 ("%-10.5u", 10)
 ("%-10.2u", -10)
 ("%-10.5u", 5000)
 ("%-10.5u", -5000)
 ("%-10.15u", -1)
 ("%-10.5u", 2147483647)
 ("%-15.u", 0)
 ("%-15.10u", 1)
 ("%-15.5u", 10)
 ("%-15.2u", -10)
 ("%-15.5u", 5000)
 ("%-15.5u", -5000)
 ("%-15.15u", -1)
 ("%-15.5u", 2147483647)
 ("%-4.5u%u%4u%-10u-u5%-.3u", 3, 4, 5, 6, 7)
 ("%-4.5u%u%4u%-10u-u5%-.3u", 300000, 400000, 500000, 600000, 700000)
 ("%-4.5u%u%4u%-10u-u5%-.3u", -300000, -400000, -500000, -600000, -700000)
 ("%-4.5u%u%4u%-10u-u5%-.3u", 2147483647, 2141483647, 2141483647, 2141483647, 2141483647)
 ("%-4.5u%u%4u%-10u-u5%-.3u", -1, -1, -1, -1, -1)
 ("%-x", 0)
 ("%-x", 1)
 ("%-x", 10)
 ("%-x", -10)
 ("%-x", 5000)
 ("%-x", -5000)
 ("%-x", -1)
 ("%-x", 2147483647)
 ("%-1x", 0)
 ("%-1x", 1)
 ("%-1x", 10)
 ("%-1x", -10)
 ("%-1x", 5000)
 ("%-1x", -5000)
 ("%-1x", -1)
 ("%-1x", 2147483647)
 ("%-10x", 0)
 ("%-10x", 1)
 ("%-10x", 10)
 ("%-10x", -10)
 ("%-10x", 5000)
 ("%-10x", -5000)
 ("%-10x", -1)
 ("%-10x", 2147483647)
 ("%-.x", 0)
 ("%-.1x", 1)
 ("%-.2x", 10)
 ("%-.3x", -10)
 ("%-.4x", 5000)
 ("%-.5x", -5000)
 ("%-.6x", -1)
 ("%-.7x", 2147483647)
 ("%-1.8x", 0)
 ("%-1.9x", 1)
 ("%-1.10x", 10)
 ("%-1.0x", -10)
 ("%-1.6x", 5000)
 ("%-1.4x", -5000)
 ("%-1.10x", -1)
 ("%-1.12x", 2147483647)
 ("%-10.x", 0)
 ("%-10.10x", 1)
 ("%-10.5x", 10)
 ("%-10.2x", -10)
 ("%-10.5x", 5000)
 ("%-10.5x", -5000)
 ("%-10.15x", -1)
 ("%-10.5x", 2147483647)
 ("%-15.x", 0)
 ("%-15.10x", 1)
 ("%-15.5x", 10)
 ("%-15.2x", -10)
 ("%-15.5x", 5000)
 ("%-15.5x", -5000)
 ("%-15.15x", -1)
 ("%-15.5x", 2147483647)
 ("%-4.5x%x%4x%-10x-x5%-.3x", 3, 4, 5, 6, 7)
 ("%-4.5x%x%4x%-10x-x5%-.3x", 300000, 400000, 500000, 600000, 700000)
 ("%-4.5x%x%4x%-10x-x5%-.3x", -300000, -400000, -500000, -600000, -700000)
 ("%-4.5x%x%4x%-10x-x5%-.3x", 2147483647, 2141483647, 2141483647, 2141483647, 2141483647)
 ("%-4.5x%x%4x%-10x-x5%-.3x", -1, -1, -1, -1, -1)
 ("%-X", 0)
 ("%-X", 1)
 ("%-X", 10)
 ("%-X", -10)
 ("%-X", 5000)
 ("%-X", -5000)
 ("%-X", -1)
 ("%-X", 2147483647)
 ("%-1X", 0)
 ("%-1X", 1)
 ("%-1X", 10)
 ("%-1X", -10)
 ("%-1X", 5000)
 ("%-1X", -5000)
 ("%-1X", -1)
 ("%-1X", 2147483647)
 ("%-10X", 0)
 ("%-10X", 1)
 ("%-10X", 10)
 ("%-10X", -10)
 ("%-10X", 5000)
 ("%-10X", -5000)
 ("%-10X", -1)
 ("%-10X", 2147483647)
 ("%-.X", 0)
 ("%-.1X", 1)
 ("%-.2X", 10)
 ("%-.3X", -10)
 ("%-.4X", 5000)
 ("%-.5X", -5000)
 ("%-.6X", -1)
 ("%-.7X", 2147483647)
 ("%-1.8X", 0)
 ("%-1.9X", 1)
 ("%-1.10X", 10)
 ("%-1.0X", -10)
 ("%-1.6X", 5000)
 ("%-1.4X", -5000)
 ("%-1.10X", -1)
 ("%-1.12X", 2147483647)
 ("%-10.X", 0)
 ("%-10.10X", 1)
 ("%-10.5X", 10)
 ("%-10.2X", -10)
 ("%-10.5X", 5000)
 ("%-10.5X", -5000)
 ("%-10.15X", -1)
 ("%-10.5X", 2147483647)
 ("%-15.X", 0)
 ("%-15.10X", 1)
 ("%-15.5X", 10)
 ("%-15.2X", -10)
 ("%-15.5X", 5000)
 ("%-15.5X", -5000)
 ("%-15.15X", -1)
 ("%-15.5X", 2147483647)
 ("%-4.5X%X%4X%-10X-X5%-.3X", 3, 4, 5, 6, 7)
 ("%-4.5X%X%4X%-10X-X5%-.3X", 300000, 400000, 500000, 600000, 700000)
 ("%-4.5X%X%4X%-10X-X5%-.3X", -300000, -400000, -500000, -600000, -700000)
 ("%-4.5X%X%4X%-10X-X5%-.3X", 2147483647, 2141483647, 2141483647, 2141483647, 2141483647)
 ("%-4.5X%X%4X%-10X-X5%-.3X", -1, -1, -1, -1, -1)
 ("%01d", 0)
 ("%01d", -4)
 ("%010d", 42)
 ("%042d", 42000)
 ("%020d", -42000)
 ("wait for it... %050d", 42)
 ("%020d is how many tests are going to be made", 8000)
 ("%05d", 2147483647)
 ("%030d", 2147483647)
 ("%010d", 2147483647)
 ("%05d", (int)-2147483648)
 ("%030d", (int)-2147483648)
 ("%010d", (int)-2147483648)
 ("%011d", (int)-2147483648)
 ("%012d", (int)-2147483648)
 ("%012d, %20d, %2d, %42d", (int)-2147483648, 3, 30, -1)
 ("%012d, %d, %2d, %42d", (int)-2147483648, 3, 30, -1)
 ("%014d%020d%02d%0d", (int)-2147483648, 3, 30, -1)
 ("%014dc%020ds%02dx%0du", (int)-2147483648, 3, 30, -1)
 ("%01.d", 0)
 ("%01.0d", 0)
 ("%02.0d", 0)
 ("%03.0d", 0)
 ("%01.1d", 0)
 ("%01.2d", 0)
 ("%01.3d", 0)
 ("%01.0d", -4)
 ("%01.1d", -4)
 ("%01.2d", -4)
 ("%01.3d", -4)
 ("%01.0d", 4)
 ("%01.1d", 4)
 ("%01.2d", 4)
 ("%01.3d", 4)
 ("%010.20d", 42)
 ("%042.2d", 42000)
 ("%042.20d", 42000)
 ("%042.42d", 42000)
 ("%042.52d", 42000)
 ("%020.10d", -42000)
 ("%020.20d", -42000)
 ("%020.30d", -42000)
 ("wait for it... %050.50d", 42)
 ("%020.19d is how many tests are going to be made", 8000)
 ("%020.20d is how many tests are going to be made", 8000)
 ("%020.21d is how many tests are going to be made", 8000)
 ("%05d", 2147483647)
 ("%030d", 2147483647)
 ("%09d", 2147483647)
 ("%010d", 2147483647)
 ("%011d", 2147483647)
 ("%05d", (int)-2147483648)
 ("%030d", (int)-2147483648)
 ("%010d", (int)-2147483648)
 ("%011d", (int)-2147483648)
 ("%012d", (int)-2147483648)
 ("%012d, %20d, %2d, %000042d", (int)-2147483648, 3, 30, -1)
 ("%012d, %d, %002d, %42d", (int)-2147483648, 3, 30, -1)
 ("%0014.2d%020d%0002.d%000.5d", (int)-2147483648, 3, 30, -1)
 ("%014dc%020ds%02dx%0du", (int)-2147483648, 3, 30, -1)
 ("%01i", 0)
 ("%01i", -4)
 ("%010i", 42)
 ("%042i", 42000)
 ("%020i", -42000)
 ("wait for it... %050i", 42)
 ("%020i is how many tests are going to be maie", 8000)
 ("%05i", 2147483647)
 ("%030i", 2147483647)
 ("%010i", 2147483647)
 ("%05i", (int)-2147483648)
 ("%030i", (int)-2147483648)
 ("%010i", (int)-2147483648)
 ("%011i", (int)-2147483648)
 ("%012i", (int)-2147483648)
 ("%012i, %20i, %2i, %42i", (int)-2147483648, 3, 30, -1)
 ("%012i, %i, %2i, %42i", (int)-2147483648, 3, 30, -1)
 ("%014i%020i%02i%0i", (int)-2147483648, 3, 30, -1)
 ("%014ic%020is%02ix%0iu", (int)-2147483648, 3, 30, -1)
 ("%01.i", 0)
 ("%01.0i", 0)
 ("%02.0i", 0)
 ("%03.0i", 0)
 ("%01.1i", 0)
 ("%01.2i", 0)
 ("%01.3i", 0)
 ("%01.0i", -4)
 ("%01.1i", -4)
 ("%01.2i", -4)
 ("%01.3i", -4)
 ("%01.0i", 4)
 ("%01.1i", 4)
 ("%01.2i", 4)
 ("%01.3i", 4)
 ("%010.20i", 42)
 ("%042.2i", 42000)
 ("%042.20i", 42000)
 ("%042.42i", 42000)
 ("%042.52i", 42000)
 ("%020.10i", -42000)
 ("%020.20i", -42000)
 ("%020.30i", -42000)
 ("wait for it... %050.50i", 42)
 ("%020.19i is how many tests are going to be made", 8000)
 ("%020.20i is how many tests are going to be made", 8000)
 ("%020.21i is how many tests are going to be made", 8000)
 ("%05i", 2147483647)
 ("%030i", 2147483647)
 ("%09i", 2147483647)
 ("%010i", 2147483647)
 ("%011i", 2147483647)
 ("%05i", (int)-2147483648)
 ("%030i", (int)-2147483648)
 ("%010i", (int)-2147483648)
 ("%011i", (int)-2147483648)
 ("%012i", (int)-2147483648)
 ("%012i, %20i, %2i, %000042i", (int)-2147483648, 3, 30, -1)
 ("%012i, %i, %002i, %42i", (int)-2147483648, 3, 30, -1)
 ("%0014.2i%020i%0002.i%000.5i", (int)-2147483648, 3, 30, -1)
 ("%014ic%020is%02ix%0iu", (int)-2147483648, 3, 30, -1)
 ("%01u", 0)
 ("%01u", -4)
 ("%010u", 42)
 ("%042u", 42000)
 ("%020u", -42000)
 ("wait for it... %050u", 42)
 ("%020u is how many tests are going to be maie", 8000)
 ("%05u", 2147483647)
 ("%030u", 2147483647)
 ("%010u", 2147483647)
 ("%05u", -1)
 ("%030u", -1)
 ("%010u", -1)
 ("%011u", -1)
 ("%012u", -1)
 ("%012u, %20u, %2u, %42u", -1, 3, 30, -1)
 ("%012u, %u, %2u, %42u", -1, 3, 30, -1)
 ("%014u%020u%02u%0u", -1, 3, 30, -1)
 ("%014uc%020us%02ux%0ui", -1, 3, 30, -1)
 ("%01.u", 0)
 ("%01.0u", 0)
 ("%02.0u", 0)
 ("%03.0u", 0)
 ("%01.1u", 0)
 ("%01.2u", 0)
 ("%01.3u", 0)
 ("%01.0u", 4)
 ("%01.1u", 4)
 ("%01.2u", 4)
 ("%01.3u", 4)
 ("%010.20u", 42)
 ("%042.2u", 42000)
 ("%042.20u", 42000)
 ("%042.42u", 42000)
 ("%042.52u", 42000)
 ("wait for it... %050.50u", 42)
 ("%020.19u is how many tests are going to be made", 8000)
 ("%020.20u is how many tests are going to be made", 8000)
 ("%020.21u is how many tests are going to be made", 8000)
 ("%05u", 2147483647)
 ("%030u", 2147483647)
 ("%09u", 2147483647)
 ("%010u", 2147483647)
 ("%011u", 2147483647)
 ("%05u",  -1)
 ("%030u", -1)
 ("%010u", -1)
 ("%011u", -1)
 ("%012u", -1)
 ("%012u, %20u, %2u, %000042u", -1, 3, 30, -1)
 ("%012u, %u, %002u, %42u", -1, 3, 30, -1)
 ("%0014.2u%020u%0002.u%000.5u", -1, 3, 30, -1)
 ("%014uc%020us%02ux%0ui", -1, 3, 30, -1)
 ("%01x", 0)
 ("%01x", -4)
 ("%010x", 42)
 ("%042x", 42000)
 ("%020x", -42000)
 ("wait for it... %050x", 42)
 ("%020x is how many tests are going to be made", 8000)
 ("%05x", 2147483647)
 ("%030x", 2147483647)
 ("%010x", 2147483647)
 ("%05x", -1)
 ("%030x", -1)
 ("%010x", -1)
 ("%011x", -1)
 ("%012x", -1)
 ("%012x, %20x, %2x, %42x", -1, 3, 30, -1)
 ("%012x, %x, %2x, %42x", -1, 3, 30, -1)
 ("%014x%020x%02x%0x", -1, 3, 30, -1)
 ("%014xc%020xs%02xX%0xi", -1, 3, 30, -1)
 ("%01.x", 0)
 ("%01.0x", 0)
 ("%02.0x", 0)
 ("%03.0x", 0)
 ("%01.1x", 0)
 ("%01.2x", 0)
 ("%01.3x", 0)
 ("%01.0x", 4)
 ("%01.1x", 4)
 ("%01.2x", 4)
 ("%01.3x", 4)
 ("%010.20x", 42)
 ("%042.2x", 42000)
 ("%042.20x", 42000)
 ("%042.42x", 42000)
 ("%042.52x", 42000)
 ("wait for it... %050.50x", 42)
 ("%020.19x is how many tests are going to be made", 8000)
 ("%020.20x is how many tests are going to be made", 8000)
 ("%020.21x is how many tests are going to be made", 8000)
 ("%05x", 2147483647)
 ("%030x", 2147483647)
 ("%09x", 2147483647)
 ("%010x", 2147483647)
 ("%011x", 2147483647)
 ("%05x",  -1)
 ("%030x", -1)
 ("%010x", -1)
 ("%011x", -1)
 ("%012x", -1)
 ("%012x, %20x, %2x, %000042x", -1, 3, 30, -1)
 ("%012x, %x, %002x, %42x", -1, 3, 30, -1)
 ("%0014.2x%020x%0002.x%000.5x", -1, 3, 30, -1)
 ("%014xc%020xs%02xx%0xi", -1, 3, 30, -1)
 ("%01X", 0)
 ("%01X", -4)
 ("%010X", 42)
 ("%042X", 42000)
 ("%020X", -42000)
 ("wait for it... %050X", 42)
 ("%020X is how many tests are going to be made", 8000)
 ("%05X", 2147483647)
 ("%030X", 2147483647)
 ("%010X", 2147483647)
 ("%05X", -1)
 ("%030X", -1)
 ("%010X", -1)
 ("%011X", -1)
 ("%012X", -1)
 ("%012X, %20X, %2X, %42X", -1, 3, 30, -1)
 ("%012X, %X, %2X, %42X", -1, 3, 30, -1)
 ("%014X%020X%02X%0X", -1, 3, 30, -1)
 ("%014Xc%020Xs%02XX%0Xi", -1, 3, 30, -1)
 ("%01.X", 0)
 ("%01.0X", 0)
 ("%02.0X", 0)
 ("%03.0X", 0)
 ("%01.1X", 0)
 ("%01.2X", 0)
 ("%01.3X", 0)
 ("%01.0X", 4)
 ("%01.1X", 4)
 ("%01.3X", 4)
 ("%010.20X", 42)
 ("%042.2X", 42000)
 ("%042.20X", 42000)
 ("%042.42X", 42000)
 ("%042.52X", 42000)
 ("wait for it... %050.50X", 42)
 ("%020.19X is how many tests are going to be made", 8000)
 ("%020.20X is how many tests are going to be made", 8000)
 ("%020.21X is how many tests are going to be made", 8000)
 ("%05X", 2147483647)
 ("%030X", 2147483647)
 ("%09X", 2147483647)
 ("%010X", 2147483647)
 ("%011X", 2147483647)
 ("%05X",  -1)
 ("%030.20X", -1)
 ("%010.11X", -1)
 ("%011.11X", -1)
 ("%012.11X", -1)
 ("%012X, %20X, %2X, %000042.20X", -1, 3, 30, -1)
 ("%012X, %X, %002X, %42.5X", -1, 3, 30, -1)
 ("%0014.2X%020X%0002.X%000.5X", -1, 3, 30, -1)
 ("%014Xc%020Xs%02.5XX%0.Xi", -1, 3, 30, -1)
 ("%#x", 0)
 ("%#x", -4)
 ("%#x", 42)
 ("%#x", 42000)
 ("%#x", -42000)
 ("wait for it... %#x", 42)
 ("%#x is how many tests are going to be made", 8000)
 ("%#xd", 2147483647)
 ("%#xp", 2147483647)
 ("%#xX", 2147483647)
 ("%#xp", -1)
 ("%#xd", -1)
 ("%#xX", -1)
 ("%#x", -1)
 ("%#x, %x, %x, %x", -1, 3, 30, -1)
 ("%#x%#x%#x%#x", -1, 3, 30, -1)
 ("%#xc%#xs%#xX%#xi", -1, 3, 30, -1)
 ("--.%#xp", 0)
 ("--.%#xs", 0)
 ("%#xc", 4)
 ("c%#x-i", 42000)
 ("wait for it... %#xp", 42)
 ("%#X", 0)
 ("%#X", -4)
 ("%#X", 42)
 ("%#X", 42000)
 ("%#X", -42000)
 ("wait for it... %#X", 42)
 ("%#X is how many tests are going to be made", 8000)
 ("%#Xd", 2147483647)
 ("%#Xp", 2147483647)
 ("%#XX", 2147483647)
 ("%#Xp", -1)
 ("%#Xd", -1)
 ("%#XX", -1)
 ("%#X", -1)
 ("%#X, %X, %X, %X", -1, 3, 30, -1)
 ("%#X%#X%#X%#X", -1, 3, 30, -1)
 ("%#Xc%#Xs%#Xx%#Xi", -1, 3, 30, -1)
 ("--.%#Xp", 0)
 ("--.%#Xs", 0)
 ("%#Xc", 4)
 ("c%#X-i", 42000)
 ("wait for it... %#Xp", 42)
 ("% d", 0)
 ("% d", 1)
 ("% d", -1)
 ("%    d", 0)
 ("%   d", 1)
 ("%  d", -1)
 ("% d", 2147483647)
 ("% d", (int)-2147483648)
 ("%   d", 2147483647)
 ("%  d", (int)-2147483648)
 ("% d", 2178647)
 ("% d", (int)-2144348)
 ("%   d", 2147837)
 ("%  d", (int)-2147486)
 ("%  d this is %d getting% di hard :/", (int)-2147486, -2, 42)
 ("% i", 0)
 ("% i", 2)
 ("% i", -2)
 ("%    i", 0)
 ("%   i", 1)
 ("%  i", -1)
 ("% i", 2147483647)
 ("% i", (int)-2147483648)
 ("%   i", 2147483647)
 ("%  i", (int)-2147483648)
 ("% i", 2178647)
 ("% i", (int)-2144348)
 ("%   i", 2147837)
 ("%  i", (int)-2147486)
 ("%  i this is %i getting% is hari :/", (int)-2147486, -2, 42)
 ("%+d", 0)
 ("%+d", 1)
 ("%+d", -1)
 ("%+d", 24)
 ("%+d", 42)
 ("%+d", -42)
 ("%+d", 2147483647)
 ("%+d", (int)-2147483648)
 ("%+++d", 2147483647)
 ("%++d", (int)-2147483648)
 ("%+d", 2178647)
 ("%+d", (int)-2144348)
 ("%+++d", 2147837)
 ("%++d", (int)-2147486)
 ("%++d this is %d getting%+di hard :/", (int)-2147486, -2, 42)
 ("%+i", 0)
 ("%+i", 1)
 ("%+i", -1)
 ("%+i", 24)
 ("%+i", 42)
 ("%+i", -42)
 ("%+i", 2147483647)
 ("%+i", (int)-2147483648)
 ("%+++i", 2147483647)
 ("%++i", (int)-2147483648)
 ("%+i", 2178647)
 ("%+i", (int)-2144348)
 ("%+++i", 2147837)
 ("%++i", (int)-2147486)
 ("%++i this is %i getting%+ix hard :/", (int)-2147486, -2, 42)
 ("%-00000-----*i, %---0.*d, %0-0-0-0-0.*d, %-0-0-0-0-.*d, %-----.*d", a, i, a, i, a, i, a, i, a, i)
 ("%-00000-----*i, %---0.*d, %0-0-0-0-0.*d, %-0-0-0-0-.*d, %-----.*d", a, j, a, j, a, j, a, j, a, j)
 ("%-00000-----*i, %---0.*d, %0-0-0-0-0.*d, %-0-0-0-0-.*d, %-----.*d", a, l, a, l, a, l, a, l, a, l)
 (" %-9x %-10x %-11x %-12x %-13x %-14x %-15x", INT_MAX, INT_MIN, LONG_MAX, LONG_MIN, ULONG_MAX, 0, -42)
 ("%.s", "")
 (" %.1s", "")
 ("%.1s ", "")
 (" %.s ", "")
 (" %.s ", "-")
 (" %.2s %.1s ", "", "-")
 (" %.3s %.2s ", " - ", "")
 (" %.1s %.2s %.3s %.4s ", " - ", "", "4", "")
 (" %.2s %.3s %.4s %.5s %.1s ", " - ", "", "4", "", "2 ")
 ("%%%c%%%s%%%d%%%i%%%u%%%x%%%X%%%% %%%c%%%s%%%d%%%i%%%u%%%x%%%X%%%% %%%c%%%s%%%d%%%i%%%u%%%x%%%X%%%% %c%%", 'A', "42", 42, 42 ,42 , 42, 42, 'B', "-42", -42, -42 ,-42 ,-42, 42, 'C', "0", 0, 0 ,0 ,0, 42, 0)
 (" %% ")
 (" %%%% ")
 (" %% %% %% ")
 (" %%  %%  %% ")
 (" %%   %%   %% ")
 ("%%")
 ("%% %%")
 ("%5%05r")
 ("%5%")
 ("%-5%")
 ("%05%")
 ("%-05%")
 ("%.5%")
 ("%-.5%")
 ("%.05%")
 ("%-.05%")
 ("%7.7s%7.7s", "hello", "world")
 ("%3.7s%7.7s", "hello", "world")
 ("%7.7s%3.7s", "hello", "world")
 ("%3.7s%3.7s", "hello", "world")
 ("%7.3s%7.7s", "hello", "world")
 ("%3.3s%7.7s", "hello", "world")
 ("%7.3s%3.7s", "hello", "world")
 ("%3.3s%3.7s", "hello", "world")
 ("%7.7s%7.3s", "hello", "world")
 ("%3.7s%7.3s", "hello", "world")
 ("%7.7s%3.3s", "hello", "world")
 ("%3.7s%3.3s", "hello", "world")
 ("%7.3s%7.3s", "hello", "world")
 ("%3.3s%7.3s", "hello", "world")
 ("%7.3s%3.3s", "hello", "world")
 ("%3.3s%3.3s", "hello", "world")
 ("%3s%3s", "hello", "world")
 ("%-7s%5s", "hello", "world")
 ("%7s%-5s", "hello", "world")
 ("%0d", 110)
 ("%#010x", 110)
 ("%+-+ 10x", 110)
 ("%# 10x", 110)
 ("%#  10x", 110)
 ("%#010x", 110)
 ("%0214d", 110)
 ("%0214.12d", 110)
 ("%0214x", INT_MIN)
 ("%02.140x", INT_MIN)
 ("%#0214x", 11111111)
 ("%#2142x", 11111111)
 ("%x%tt05%r%q%w%q%m", 11111111)
 ("%x%05tt%r%q%w%q%m", 11111111)
 ("%x%tt05", 11111111)
 ("%x%tt 05%", 11111111)
 ("%x%tt0*%", 11111111, 5)
 ("%x%tt05", 11111111)
 ("%-+d", 0)
 ("%-+d", 1)
 ("%-+d", -1)
 ("%-++++d", 0)
 ("%-+++d", 1)
 ("%-++d", -1)
 ("%-+d", 2147483647)
 ("%-+d", (int)-2147483648)
 ("%-+++d", 2147483647)
 ("%-++d", (int)-2147483648)
 ("%-+d", 2178647)
 ("%-+d", (int)-2144348)
 ("%-+++d", 2147837)
 ("%-++d", (int)-2147486)
 ("%-+1d", 0)
 ("%-++1d", -1)
 ("%-+2d", 1)
 ("%-+3d", -1)
 ("%-++++4d", 0)
 ("%-+++5d", 1)
 ("%-++2d", -1)
 ("%-+9d", 2147483647)
 ("%-+10d", 2147483647)
 ("%-+11d", 2147483647)
 ("%-+13d", 2147483647)
 ("%-+16d", 2147483647)
 ("%-+9d", (int)-2147483648)
 ("%-+++10d", (int)-2147483648)
 ("%-++11d", (int)-2147483648)
 ("%-++11d", (int)-2147483648)
 ("%-+++++12d", (int)-2147483648)
 ("%-+.d", 0)
 ("%-+.0d", 0)
 ("%-+.1d", 0)
 ("%-+.2d", 0)
 ("%-+.0d", 1)
 ("%-+.1d", 1)
 ("%-+.d", -1)
 ("%-+++.3d", 1)
 ("%-++.1d", -1)
 ("%-++.3d", -1)
 ("%-+.10d", 2147483647)
 ("%-+.11d", 2147483647)
 ("%-+.12d", 2147483647)
 ("%-+.9d", (int)-2147483648)
 ("%-+++.9d", 2147483647)
 ("%-++.10d", (int)-2147483648)
 ("%-+.8d", 2178647)
 ("%-+.9d", (int)-2144348)
 ("%-+++.7d", 2147837)
 ("%-++.8d", (int)-2147486)
 ("%-++.7d", (int)-2147486)
 ("%-+1.0d", 0)
 ("%-+1.1d", 0)
 ("%-+1.2d", 0)
 ("%-++1.1d", -1)
 ("%-++1.2d", -1)
 ("%-+2.0d", 1)
 ("%-+3.3d", -1)
 ("%-++++4.8d", 0)
 ("%-++5.d", 1)
 ("%-++2.9d", -1)
 ("%-+9.8d", 2147483647)
 ("%-+10.11d", 2147483647)
 ("%-+11.9d", 2147483647)
 ("%-+9.9d", (int)-2147483648)
 ("%-++-+10.9d", (int)-2147483648)
 ("%-++11.9dx", (int)-2147483648)
 ("%-++11.12ds", (int)-2147483648)
 ("%-+++12.0d", (int)-2147483648)
 ("life %++-++12.0d is %-d craz%+20dy", 1, 2, (int)-2147483648)
 ("%++00+00+9.12d is %++-+22d craz%--+-22dy", -333, 2, -30)
 ("Thank %++-+d you vim for allowing %+0+++.dme ed%++-+dit this file", -333, 0, -30)
 ("%jd%td%zd", w, d, sz)
 ("%-jd%-td%-zd", w, d, sz)
 ("% jd% td% zd", w, d, sz)
 ("%06.10jd%06.10td%06.10zd", w, d, sz)
 ("123%n456%ln789%lln", &np, &nlp, &nllp)
 ("%d%ld%lld", np, nlp, nllp)
 ("%c%c%c*", '\0', '1', 1)
 ("%c small string", '\0')
 ("the char is: %c", '\0')
 ("l%cl%cl%cl%cl%c", '\0', '\0', '\0', 'e', '\0')
 ("%c - %s - %p %d - %i - %u - %x %X %%", '\0', "test", (void *)-1, 20, -20, -1, -1, 200000000)
 ("%c %s - %p - %d - %i %u - %x - %X %%", '\0', null_str, (void *)0xdeadc0de, 0, (int)-2147483648, -1, -1, 200000000)
 ("%1c", '\0'))
 ("%10c", '\0'))
 ("%5c now you see", '\0'))
 ("%-c%-c%c*", 0, '1', 1)
 ("%-2c%-3c%-4c*", 0, 'a', 0)
